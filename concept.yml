:let:
  (++):
    :lambda: [a, b]
    :do:
      :++: [a, b]

  Cons:
    :rec:
      new:
        :lambda: [a, b, op]
        :do: [op, a, b]

      car:
        :lambda: [cons]
        :do:
          - cons
          - :lambda: [a, b]
            :do: a

      cdr:
        :lambda: [cons]
        :do:
          - cons
          - :lambda: [a, b]
            :do: b

  cons: [Cons.new, { :: 1 }, { :: 2 }]
  foobar:
    - (++)
    - { :: foo }
    - { :: bar }

  things:
    - List.append
    - :list:
        - foobar
        - cons
        - Maybe
        - [Cons.car, cons]
    - :: [1, 1.2, -9, null, bar]
:in:
  :rec:
    a:
      :|>:
        - [Maybe.just, { :: 10 }]
        - [Maybe.map, [add, { :: 1 }]]
        - [Maybe.map, [add, { :: 1 }]]
        - [Maybe.withDefault, { :: 0 }]

    b: [Cons.car, cons]
    c: [Cons.cdr, cons]
    d:
      - [Maybe.withDefault, null_]
      - - [List.head, things]
    e:
      :|>:
        - [List.tail, things]
        - List.head
        - [Maybe.withDefault, null_]
        - Cons.car
